#====================================================================
#
# Double Mach reflection problem
#
# Two levels of refinement are required for observing close capture
# of the shocks.  With godunov.max_level set to 2, the solution takes
# ~3 min on 4 cores.
#
# If you are willing to wait, godonuv.max_level = 3 is quite
# impressive.  (~10 min on 40 cores).
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/Oblique.000000.2d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 20
file.plot_prefix = plot/Oblique.plot.
#file.plot_JU = 1

# Checkpoint file information (optional: default no checkpoints)
file.checkpoint_interval = 100
file.checkpoint_prefix = checkpoint/Oblique.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = ObliqueWave

#--------------------------------------------------------------------
# Physics
#--------------------------------------------------------------------

physics.fluid_models = inertial #viscous

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 96 72 12

# Physical domain length (must be 1.0 for x and scaled by num cells
# in other directions)
grid.domain_length = 1.0 0.75 0.125

#--------------------------------------------------------------------
# Coordinate system
#--------------------------------------------------------------------

# Angle given in degrees
coordsys.ramp_angle  = -20.
coordsys.lead_length = 0.1
coordsys.ramp_length = 0.2

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 720

# Initial solution time (optional: default 0.0)
sol.initial_time = 0.0

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 0.025

# CFL number (optional: default 1.0)
sol.cfl = 1.0

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening,
# face_order)
# Options are FourthOrderPPM, FifthOrderPPM, FifthOrderUpwind,
# FourthOrderCentral, and FirstOrderGodunov (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

# Face limiting (optional: default 0)
#limit.limit_face_values = 0

# Deconvolution limiting (experimental, optional: default false)
#limit.cell_deconvolution_limiting = false
#limit.face_deconvolution_limiting = false

# Provide extra limiting near boundaries (optional: default 0)
#limit.extra_bound_lim = 0

# Whether to use artificial viscosity (optional: default 1)
#limit.use_artificial_viscosity = 1

# Artificial viscosity parameter (optional: default 0.3)
#limit.artificial_viscosity_coef = 0.3

# Fourth-order artificial viscosity coefficient (optional: default 0.3)
#limit.fourth_order_artificial_viscosity_coef = 0.3

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 1

# Refinement ratio between levels
amr.ref_ratio = 4 4 4

# Regridding interval for each level
amr.regrid_interval = 4 4 4

# Amount to grow refined patch around tagged cells (optional: default 0)
# We need 6 ghosts before the shock but the gridbuffer will add 5 and the shock
# will be more disperse on the coarser level.
# Then we need a value equivalent to the regrid interval, assuming the time-
# step is restricted by the speed of the feature we are tracking.
amr.tag_buffer_size = 4

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1

#--------------------------------------------------------------------
# IBC
#--------------------------------------------------------------------

state.names = "initial"
state.initial_density = 1.225
state.initial_pressure = 101325.0
state.initial_velocity = 1020.0 0.0 0.0

ibc.wall_order = 4

#--------------------------------------------------------------------
# Tagging
#--------------------------------------------------------------------

tag.all_prepend = gradient density 0.1
tag.all_prepend = physical_box -0.005 0.0 0 0.005 0.01 0