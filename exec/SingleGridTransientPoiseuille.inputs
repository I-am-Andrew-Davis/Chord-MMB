#====================================================================
#
# Poiseuille Flow Problem
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/transientPoiseuille.002048.3d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 10000
file.plot_prefix = plot/transientPoiseuille.plot.

# Checkpoint file information (optional: default no checkpoints)
#file.checkpoint_interval = 256
file.checkpoint_prefix = checkpoint/transientPoiseuille.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = NavierStokesTransientPoiseuille

#--------------------------------------------------------------------
# Initial and Boundary Conditions
#--------------------------------------------------------------------

# Wall normal direction
ibc.wall_normal_dir = 1
# Direction to add force (force value is calculated based on Reynolds number)
ibc.force_dir = 0
# Temperature of the lower wall (must be higher than the temperature of the 
# upper wall)
ibc.wall_lo_temp = 500
# Temperature of the upper wall
ibc.wall_hi_temp = 288.15

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 128 64 64

# Physical domain origin (optional: default 0)
grid.domain_origin = 0.0 0.0 0.0

# Physical domain length
grid.domain_length = 0.2 0.1 0.1

# Coordinate system (comment out to use Cartesian)
# coordsys.type = warped
# coordsys.scale = 0.1 0.1 0.0
# coordsys.relative_tolerance = 1.0e-12
# coordsys.absolute_tolerance = 1.0e-13
# coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Fluid
#--------------------------------------------------------------------

# Reynolds number (optional: default 1.)
fluid.Re = 800

# Dynamic viscosity (optional: default 1.789E-5 (kg/m s))
# Air at 80 C
fluid.mu =  1.789E-5

# Density (optional: default 1.2250 (kg/m&3))
fluid.rho = 1.225

# Temperature (optional: default 288.15 (K))
# Sets P = 1.0
fluid.T = 288.15

# Thermal conductivity (optional: default 1.0 (W/m-K))
#fluid.K = 1.0

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 50000

# Initial solution time (optional: default 0.0)
#sol.initial_time = 0.48

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 100.0

# Time step parameters (optional: default 0.0 for variable dt)
sol.fixed_dt = 2.5E-5

# Limit on the time step growth (optional: default 1.1)
sol.max_dt_growth = 1.1

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
sol.cfl = 0.9

# Initial CFD for ramping (optional: default cfl)
sol.initial_cfl = 0.9
#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening)
# Options are FourthOrderPPM, FourthOrderCentral, FirstOrderGodunov
# (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 0

# Artificial viscosity parameter (optional: default 0.3)
#limit.artificial_viscosity = 0.3

# Fourth-order artificial viscosity coefficient (optional: default 0.42).  Note
# that 0.42 is 0.3*gamma
#limit.fourth_order_artificial_viscosity_coef = 0.42

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 0

# Refinement ratio between levels
amr.ref_ratio = 2 2 2

# Regridding interval for each level
amr.regrid_interval = 32 32 32

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 4

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Buffer between grid level l-1 and l+1 (do not set - determined by code)
#amr.grid_buffer_size = 2

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1
