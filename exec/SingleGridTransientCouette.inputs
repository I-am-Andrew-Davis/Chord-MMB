#====================================================================
#
# Couette Flow Problem
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/transientCouette.002048.3d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 1
file.plot_prefix = plot/transientCouette.plot.

# Checkpoint file information (optional: default no checkpoints)
#file.checkpoint_interval = 256
file.checkpoint_interval = -1
file.checkpoint_prefix = checkpoint/transientCouette.

file.plot_error = 1

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = NavierStokesTransientCouette

#--------------------------------------------------------------------
# IBC
#--------------------------------------------------------------------

# Set periodicity
ibc.periodicity = 1 0 0

# State names
state.names = "initial" "low_wall" "high_wall"

# Initial state
state.initial_frame-velocity = 0. 0. 0.
state.initial_density = 1.225
state.initial_velocity = 0.0292081632653 0. 0.
state.initial_pressure = 101325.0

# Lower wall state
state.low_wall_frame-velocity = 0. 0. 0.
state.low_wall_density = 1.225
state.low_wall_velocity = 0.0292081632653 0. 0.
state.low_wall_pressure = 101325.0

# Higher wall state
state.high_wall_frame-velocity = 0. 0. 0.
state.high_wall_density = 1.225
state.high_wall_velocity = 0. 0. 0.
state.high_wall_pressure = 101325.0

# Set initial state
ibc.initial_state = initial

# Define boundary conditions for non-periodic directions, lo and hi
ibc.bc_type-default = AdiabaticWall
ibc.bc_state-default = low_wall

# High wall
ibc.bc_type-block_0_y_hi = AdiabaticWall
ibc.bc_state-block_0_y_hi = high_wall

# Define order of BC (default: 4)
ibc.bc_order-default = 4

# Set which wall is moving, 0 for low wall, 1 for high wall
ibc.moving_wall = 0
# Create a file that contains the exact solution
# Comment out if no output file is desired
ibc.dat_file = plot/usol.dat

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 16 16 16

# Physical domain origin (optional: default 0)
grid.domain_origin = 0.0 0.0 0.0

# Physical domain length
grid.domain_length = 0.1 0.1 0.1

# Coordinate system (comment out to use Cartesian)
coordsys.type = warped
coordsys.scale = 0.1 0.1 0.0
coordsys.relative_tolerance = 1.0e-12
coordsys.absolute_tolerance = 1.0e-13
coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Fluid
#--------------------------------------------------------------------

# Dynamic viscosity (optional: default 1.789E-5 (kg/m s))
# Air at 80 C
fluid.mu = 1.789E-5

# Thermal conductivity (optional: default 2.5326E-2 (W/m-K))
#fluid.K = 2.5326E-2

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 16

# Initial solution time (optional: default 0.0)
sol.initial_time = 10.0

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 100.0

# Time step parameters (optional: default 0.0 for variable dt)
sol.fixed_dt = 1.6E-3

# Limit on the time step growth (optional: default 1.1)
sol.max_dt_growth = 1.1

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
sol.cfl = 1.0

# Initial CFD for ramping
#sol.initial_cfl = 1.0 (optional: default cfl)

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening)
# Options are FourthOrderPPM, FourthOrderCentral, FirstOrderGodunov
# (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 0

# Artificial viscosity parameter (optional: default 0.3)
limit.artificial_viscosity = 0.

# Fourth-order artificial viscosity coefficient (optional: default 0.3).  Note
# that 0.42 is 0.3*gamma
limit.fourth_order_artificial_viscosity_coef = 0.

# Acoustic and isentropic corrections for wall boundaries (optional: default 1)
# This should only be set to 0 for verification of wall order-of-accuracy
limit.wall_acoustic_isentropic_corrections = 0

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 0

# Refinement ratio between levels
amr.ref_ratio = 2 2 2

# Regridding interval for each level
amr.regrid_interval = -1 -1 -1

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 4

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Buffer between grid level l-1 and l+1 (do not set - determined by code)
#amr.grid_buffer_size = 2

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1
