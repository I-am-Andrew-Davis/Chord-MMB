#====================================================================
#
# Lid-Driven Cavity Flow Problem
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/liddriven.090000.2d.hdf5

# Plot file information (optional: default no plots)
file.plot_period = 5.E-7
file.plot_prefix = plot/cavity.plot.

# Checkpoint file information (optional: default no checkpoints)
file.checkpoint_interval = 5000
file.checkpoint_prefix = checkpoint/cavity.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = LidDrivenCavity

#--------------------------------------------------------------------
# Thermally Perfect Multispecies
#--------------------------------------------------------------------
therm.lewis_num = 0.7

# List of species
therm.species = O2 N2

# Using species correction (default: true)
# therm.use_species_correction = true

# Which Riemann solver to use, adaptive, exact, or approx
# (default: adaptive)
# therm.riemann_solver = adaptive

#--------------------------------------------------------------------
# Initial and Boundary Conditions
#--------------------------------------------------------------------

# Length of the no-slip plate (optional: default domain length)
# Direction the wall is moving, tangent to the wall
ibc.wall_dir = 0
# Initial mass fractions in the domain corresponding to the order
# of the species listed in the therm.species input
ibc.left_specs = N2 O2
ibc.left_mfs = 1. 0.
# Mass fraction of each species for the right side of the container
ibc.right_specs = N2 O2
ibc.right_mfs = 0. 1.
# Jet max velocity (a velocity profile inlet will be used)
ibc.wall_velocity = 38.307

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 128 128 128

# Physical domain origin (optional: default 0)
grid.domain_origin = 0.0 0.0 0.0

# Physical domain length
grid.domain_length = 5.456E-4 5.456E-4 5.456E-4

# Coordinate system (comment out to use Cartesian)
coordsys.type = warped
coordsys.scale = 0.1 0.1 0.0 
coordsys.relative_tolerance = 1.0e-12
coordsys.absolute_tolerance = 1.0e-13
coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Fluid
#--------------------------------------------------------------------

# Reynolds number (optional: default 1.)
fluid.Re = 1000

# Dynamic viscosity (optional: default 1.7894E-5 (m^2/s))
# Set mu to -1 so that it is solved based on temperature
fluid.mu = 2.09E-5

# Density (optional: default 1.2250 (kg/m&3))
fluid.rho = 1.0

# Temperature (optional: default 288.15 (K))
fluid.T = 353.15

# Thermal conductivity (optional: default 2.5326E-2 (W/m-K))
# Could set K to -1 so that it is solved based on temperature
#fluid.K = 2.5326E-2

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 240000

# Initial solution time (optional: default 0.0)
#sol.initial_time = 0.0

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 10000

# Time step parameters (optional: default 0.0 for variable dt)
#sol.fixed_dt = 1.0E-11

# Limit on the time step growth (optional: default 1.1)
#sol.max_dt_growth = 1.

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
#sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
sol.cfl = 1.0

# Initial CFD for ramping (optional: default cfl)
#sol.initial_cfl = 0.8

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening,
# face_order)
# Options are FourthOrderPPM, FifthOrderPPM, FifthOrderUpwind,
# FourthOrderCentral, and FirstOrderGodunov (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

# Order of face construction
# Options are 1, 4, or 5 (optional: default 5)
#limit.face_order = 4

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 1

# Artificial viscosity parameter (optional: default 0.3)
#limit.artificial_viscosity = 0.3

# Fourth-order artificial viscosity coefficient (optional: default 0.3)
#limit.fourth_order_artificial_viscosity_coef = 0.3

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 1

# Refinement ratio between levels
amr.ref_ratio = 2 2 2

# Regridding interval for each level
amr.regrid_interval = -1 -1 -1

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 0

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Buffer between grid level l-1 and l+1 (do not set - determined by code)
#amr.grid_buffer_size = 2

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1
