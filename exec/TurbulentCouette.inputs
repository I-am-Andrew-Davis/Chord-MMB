#====================================================================
#
# Turbulent Couette Problem
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/turbcouette.001000.2d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 2000
file.plot_prefix = plot/turbcouette.plot.
#file.plot_extra_vars = -1

# Checkpoint file information (optional: default no checkpoints)
file.checkpoint_interval = 25000
file.checkpoint_prefix = checkpoint/turbcouette.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = ProblemTurbulentCouette

physics.fluid_models = inertial viscous

#--------------------------------------------------------------------
# Thermally Perfect Multispecies
#--------------------------------------------------------------------

# If schmidt_number > 0., then schmidt number is used
#therm.schmidt_num = 1.
# Default uses the Lewis numbers for each species defined in
# Mechanism_files/speciesLewisNumbers.inp
#therm.lewis_num = 1.

# # The last species absorbs the error
# therm.species = N2 CO2 O2

# therm.use_species_correction = true

#--------------------------------------------------------------------
# Turbulence Model
#--------------------------------------------------------------------

# Specify turbulence model. Options are SA or LES
# (optional: default none)
turb.turb_model = SA

# Specify the initial turbulent intensity
turb.init_turb_intensity = 0.01

# Specify the inlet turbulent intensity
#(optional: default init_turb_intensity)
#turb.inlet_turb_intensity = 0.01

# Specify the turbulent Prandtl number (optional: default 0.71)
#turb.prandtl_num = 0.71

# Specify reference length for initial and inlet turbulent intensity
# Uses ref_length*0.07 for calculating initial and inlet values
turb.ref_length = 0.0292

#--------------------------------------------------------------------
# Initial and Boundary Conditions
#--------------------------------------------------------------------

# Initial values, cannot set initial velocity, use initial time instead
ibc.init_temperature = 300.
ibc.init_pressure = 101325.
# ibc.init_specs = O2 N2
# ibc.init_mfs = 0.233 0.767

# Percentage of domain height to tag away from the wall
ibc.tag_pct = 0.05

# Define which directions are periodic
ibc.periodicity = 1 0 1

# Define boundary conditions for non-periodic directions, lo and hi
ibc.lo_bc_y = AdiabaticWall
ibc.hi_bc_y = AdiabaticWall
# Define order of BC (default: 4)
ibc.lo_bc_y_order = 1
ibc.hi_bc_y_order = 1

# Define velocities (default: zero velocity)
ibc.hi_bc_vel_y = 104.16 0. 0.

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 128 128 128

# Physical domain origin (optional: default 0)
grid.domain_origin = 0. 0. 0.

# Computational domain length
grid.domain_length = 0.0292 0.0292 0.0292

# Grid mapping
#coordsys.type = cartesian
# Can stretch grid by specifying stretching
# or desired physical domain length
#coordsys.stretch = 16.73 1. 8.36
#coordsys.physical_length = 0.488516 0.0292 0.244112

coordsys.type = warped
coordsys.scale = 0.1 0.1 0.1
coordsys.relative_tolerance = 1.0e-12
coordsys.absolute_tolerance = 1.0e-13
coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Fluid
#--------------------------------------------------------------------

# Reynolds number (optional: default 1.)
fluid.Re = 1E5

# Dynamic viscosity (optional: default 1.7894E-5 (m^2/s))
# Set to -1 so that mu is solved based on temperature
#fluid.mu = -1.

# Thermal conductivity (optional: default 2.5326E-2 (W/m-K))
# Set to -1 so that K is solved based on temperature
#fluid.K = -1.

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 1000000

# Initial solution time (optional: default 0.0)
sol.initial_time = 50.

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 10000

# Time step parameters (optional: default 0.0 for variable dt)
#sol.fixed_dt = 1.0E-7

# Limit on the time step growth (optional: default 1.1)
#sol.max_dt_growth = 1.

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
#sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
sol.cfl = 0.8

# Initial CFD for ramping (optional: default cfl)
#sol.initial_cfl = 0.8

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening,
# face_order)
# Options are FourthOrderPPM, FifthOrderUpwind, FourthOrderCentral,
# and FirstOrderGodunov (optional: default FourthOrderPPM)
# Note: FourthOrderPPM uses 4th-order construction by default
limit.method = FourthOrderPPM

# Order of face construction (optional: default 5)
#limit.face_order = 5

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 1

# Artificial viscosity parameter (optional: default 0.3)
limit.artificial_viscosity_coef = 0.3

# Fourth-order artificial viscosity coefficient (optional: default 0.3)
#limit.fourth_order_artificial_viscosity_coef = 0.3

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 0

# Refinement ratio between levels
amr.ref_ratio = 2 2 2 2

# Regridding interval for each level
amr.regrid_interval = -1 -1 -1 -1

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 0

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Buffer between grid level l-1 and l+1 (do not set - determined by code)
#amr.grid_buffer_size = 2

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1
