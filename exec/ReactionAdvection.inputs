#====================================================================
#
# Basic Testing
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/reactadvect.100000.2d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 100
file.plot_prefix = plot/reactadvect.plot.
#file.plot_JU = 1
file.plot_extra_vars = 1

# Checkpoint file information (optional: default no checkpoints)
file.checkpoint_interval = 2500
file.checkpoint_prefix = checkpoint/reactadvect.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = ProblemReactionAdvection

#--------------------------------------------------------------------
# Physics
#--------------------------------------------------------------------

#physics.fluid_models = inertial viscous multispecies

#--------------------------------------------------------------------
# Thermally Perfect Multispecies
#--------------------------------------------------------------------

# If schmidt_number > 0., then schmidt number is used
#therm.schmidt_num = 1.
# Default uses the Lewis numbers for each species defined in
# Mechanism_files/speciesLewisNumbers.inp
therm.lewis_num = 1.

# Increase the speed of the solution by the following:
# 1. Increasing the cutoff temperature so that reactions are not solved
# in areas with low temperatures (where reactions would not occur anyway)
# (optional: default 250)
therm.cutoff_temperature = 298.0
# 2. Increase the temperature resolve difference. This means that values
# dependent on temperature are only solved again if the temperature varies
# by this value (optional: default 0)
therm.temperature_diff_resolve = 2.

# The last species absorbs the error
therm.species = H2 H O OH HO2 H2O2 H2O O2

therm.num_of_reactions = 18

therm.reaction_file = Mechanism_files/Hydrogen_Oxygen_Flame.inp

#--------------------------------------------------------------------
# Initial and Boundary Conditions
#--------------------------------------------------------------------

# Set the density, pressure, and/or temperature for regions 2 and 3
# Note: At least one of the variables must be set to -1 to avoid
# over-constraining the variables
# These are for a laminar flame propogation

# Oxygen region state
ibc.temp_o2 = 2000.

# Hydrogen region state
ibc.temp_h2 = 1000.


ibc.pressure = 101325.
ibc.init_velocity = 20. 0. 0.
ibc.init_const = 80.
ibc.center_loc = 0.037
ibc.plat_width = 0.006

ibc.tag_variable = temperature
ibc.tag_threshold = 0.05

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 256 8 8
grid.domain_origin = 0.0 0.0 0.0
grid.domain_length = 0.08 0.0025 0.0025

# Coordinate system (comment out to use Cartesian)
# coordsys.type = warped
# coordsys.scale = 0.1 0.1 0.0 
# coordsys.relative_tolerance = 1.0e-12
# coordsys.absolute_tolerance = 1.0e-13
# coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Fluid
#--------------------------------------------------------------------

# Reynolds number (optional: default 1.)
fluid.Re = 200

# Dynamic viscosity (optional: default 1.7894E-5 (m^2/s))
# Set to -1 so that mu is solved based on temperature
fluid.mu = -1.

# Density (optional: default 1.2250 (kg/m&3))
# Density is set based on temperature and pressure for this problem
fluid.rho = 1.1344

# Temperature (optional: default 288.15 (K))
# Sets P = 1.0
fluid.T = 298.

# Thermal conductivity (optional: default 2.5326E-2 (W/m-K))
# Set to -1 so that K is solved based on temperature
fluid.K = -1.

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 100000

sol.initial_dt = 1.0E-9

# Initial solution time (optional: default 0.0)
#sol.initial_time = 0.0

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 1.E-4

# Time step parameters (optional: default 0.0 for variable dt)
#sol.fixed_dt = 1.0E-9

# Limit on the time step growth (optional: default 1.1)
sol.max_dt_growth = 1.1

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
#sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
sol.cfl = 1.0

# Initial CFD for ramping (optional: default cfl)
#sol.initial_cfl = 0.5

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening)
# Options are FourthOrderPPM, FourthOrderCentral, FirstOrderGodunov
# (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

# Convolution and deconvolution flattening
# Flattening of convolution operations
# Options are true, false, and 2nd (optional: default false)
#limit.convolution_flattening = false

# Flattening of deconvolution operations
# Options are true, false, and 2nd (optional: default false)
#limit.deconvolution_flattening = true

# Or these can be set individually, options are true, false, and 2nd
#limit.flatten_cell_convolution = false
#limit.flatten_cell_deconvolution = 2nd
#limit.flatten_face_convolution = false
#limit.flatten_face_deconvolution = true

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 1

# Artificial viscosity parameter (optional: default 0.3)
#limit.artificial_viscosity = 0.3

# Fourth-order artificial viscosity coefficient (optional: default 0.3)
#limit.fourth_order_artificial_viscosity_coef = 0.3

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 0

# Refinement ratio between levels
amr.ref_ratio = 2 2

# Regridding interval for each level
amr.regrid_interval = 4 4

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 1

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Buffer between grid level l-1 and l+1 (do not set - determined by code)
#amr.grid_buffer_size = 2

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1

#--------------------------------------------------------------------
# ARK
#--------------------------------------------------------------------

# Turns on additive RK functionality (optional: default false)
ark.use = false

# Specifies the max level ARK should be used for (optional: default 0)
ark.max_ark_level = 0

# Factor to scale the chemical time step size by. Can be a floating point
# amount (optional: default 1)
ark.chemical_dt_scale = 100

# Number of explicit RK4 steps to take before switching to ARK
# (optional: default 0)
ark.init_erk_steps = 0

# Print linear solver stats (optional: default false)
ark.pout_ls_stats = false

# Print additional time step information (optional: default false)
ark.pout_dt_info = true
