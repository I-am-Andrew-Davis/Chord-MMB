#====================================================================
#
# Advection of a Gaussian profile on a cubic domain
#
#====================================================================

#--------------------------------------------------------------------
# Basic setup
#--------------------------------------------------------------------

# Turn on some output
verbosity = 1

# Line size
terminal_line_size = 80

#--------------------------------------------------------------------
# Files and I/O
#--------------------------------------------------------------------

# Restart file information
#file.restart_file = checkpoint/gaussianAdvect.chkpnt.000256.2d.hdf5

# Plot file information (optional: default no plots)
file.plot_interval = 16
file.plot_prefix = plot/gaussianPulse.plot.

# Checkpoint file information (optional: default no checkpoints)
file.checkpoint_interval = -1
file.checkpoint_prefix = checkpoint/gaussianPulse.chkpnt.

#--------------------------------------------------------------------
# Simulation
#--------------------------------------------------------------------

# Internal simulation defines all subsequent parameters
sim.problem_type = ProblemGaussPulse

#--------------------------------------------------------------------
# Physics
#--------------------------------------------------------------------

physics.fluid_models = multispecies inertial

#--------------------------------------------------------------------
# Thermally Perfect Multispecies
#--------------------------------------------------------------------

# If schmidt_number > 0., then schmidt number is used
#therm.schmidt_num = 1.
# Set if some species specific Lewis numbers are used (optional: default true)
therm.lewis_num = 1.

# The last species absorbs the error
therm.species = H2 O2 He

# Enforce realizability
therm.use_species_correction = true

#--------------------------------------------------------------------
# Grid
#--------------------------------------------------------------------

# Coarsest grid
grid.num_cells = 128 128 128

# Physical domain origin (optional: default 0)
grid.domain_origin = 0.0 0.0 0.0

# Physical domain length
grid.domain_length = 1.0 1.0 1.0

# Coordinate system (comment out to use Cartesian)
# coordsys.type = warped
# coordsys.scale = 0.1 0.1 0.0
# coordsys.relative_tolerance = 1.0e-12
# coordsys.absolute_tolerance = 1.0e-13
# coordsys.maximum_iterations = 100

#--------------------------------------------------------------------
# Solver parameters
#--------------------------------------------------------------------

# Maximum number of steps (optional: default 0)
sol.max_step = 10000

# Initial solution time (optional: default 0.0)
sol.initial_time = 0.

# Maximum solution time (optional: default 0.0, use leading + for delta from
# initial time)
sol.max_time = 1.E-4

# Time step parameters (optional: default 0.0 for variable dt)
#sol.fixed_dt = 5.0E-3

# Limit on the time step growth (optional: default 1.1)
#sol.max_dt_growth = 1.1

# Let the time step grow by this factor above the "maximum" before reducing it
# (optional: default 1.1)
#sol.dt_tolerance_factor = 1.0

# CFL number (optional: default 1.0)
#sol.cfl = 1.0

# Initial CFD for ramping
#sol.initial_cfl = 1.0 (optional: default cfl)

#--------------------------------------------------------------------
# Limiter
#--------------------------------------------------------------------

# Limiter summary (sets PPM_limiter, limit_face_values, use_flattening,
# face_order)
# Options are FourthOrderPPM, FifthOrderUpwind, FourthOrderCentral,
# and FirstOrderGodunov (optional: default FourthOrderPPM)
limit.method = FourthOrderPPM

#limit.limit_face_values = 1

# Convolution and deconvolution flattening
# Flattening of convolution operations
# Options are true, false, and 2nd (optional: default false)
#limit.convolution_flattening = false

# Flattening of deconvolution operations
# Options are true, false, and 2nd (optional: default false)
#limit.deconvolution_flattening = true

# Whether to use artificial viscosity (optional: default 1)
limit.use_artificial_viscosity = 1

# # Artificial viscosity parameter (optional: default 0.3)
# limit.artificial_viscosity_coef = 0.3

# # Fourth-order artificial viscosity coefficient (optional: default 0.3).  Note
# # that 0.42 is 0.3*gamma
# limit.fourth_order_artificial_viscosity_coef = 0.42

#--------------------------------------------------------------------
# AMR
#--------------------------------------------------------------------

# Number of AMR levels
amr.max_level = 1

# Refinement ratio between levels
amr.ref_ratio = 2 2

# Regridding interval for each level
amr.regrid_interval = 2 2

# Amount to grow refined patch around tagged cells (optional: default 0)
amr.tag_buffer_size = 2

# Maximum size of a box (optional: default 32)
amr.max_grid_size = 32

# Amount of a refined patch that must be filled with tagged cells (optional:
# default 0.75)
amr.fill_ratio = 0.75

# Block factor (minimum grid size) (optional: default 8)
amr.block_factor = 8

# Use AMR in time (optional: default 1)
amr.use_subcycling = 1

#--------------------------------------------------------------------
# IBC
#--------------------------------------------------------------------

# Periodiciy
ibc.periodicity = 1 1 1

# Tagging information
ibc.tag_type = gradient
ibc.tag_variable = density
ibc.tag_threshold = 0.05

# Initial values
ibc.init_velocity = 0. 0. 0.
ibc.init_pressure = -1.
ibc.init_density = 1.2
ibc.init_temperature = 300.
ibc.init_specs = O2 He H2
ibc.init_mfs = 0.5 0.25 0.25
